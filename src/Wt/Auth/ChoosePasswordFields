// This may look like C code, but it's really -*- C++ -*-
/*
 * Copyright (C) 2011 Emweb bvba, Kessel-Lo, Belgium.
 *
 * See the LICENSE file for terms of use.
 */
#ifndef WT_AUTH_CHOOSE_PASSWORD_FIELDS_H_
#define WT_AUTH_CHOOSE_PASSWORD_FIELDS_H_

#include <Wt/WObject>

namespace Wt {

class WLineEdit;
class WText;

  namespace Auth {

class AbstractPasswordAuth;

/*! \class ChoosePasswordFields Wt/Auth/ChoosePasswordFields
 *  \brief Helper class for creating a form to let a user enter a new password
 *
 * This class implements the process of letting the user chose a new
 * password, validating that it meets the expected complexity, and
 * making sure that he enters the same password twice.
 *
 * \sa RegistrationWidget, UpdatePasswordWidget
 *
 * \ingroup auth
 */
class WT_API ChoosePasswordFields : public WObject
{
public:
  /*! \brief Constructor.
   *
   * The object uses two password entry fields, and two feed-back fields
   * (for error feed-back and/or help text).
   */
  ChoosePasswordFields(const AbstractPasswordAuth& auth,
		       WLineEdit *password, WText *passwordInfo,
		       WLineEdit *password2, WText *password2Info,
		       WObject *parent = 0);

  /*! \brief Validates the entered passwords.
   *
   * This validates the entered passwords, and provides the necessary
   * feed-back in the info fields.
   *
   * Returns whether the chosen password is valid.
   */
  bool validate();

private:
  const AbstractPasswordAuth& auth_;
  WLineEdit *passwd_, *passwd2_;
  WText *passwdInfo_, *passwd2Info_;

  void init();
  void checkPassword();
  bool checkPassword(bool indicateError);
  bool checkPassword2(bool indicateError);
};

  }
}

#endif // WT_AUTH_CHOOSE_PASSWORD_FIELDS_H_
