
#ifndef WTIME_PICKER_H_
#define WTIME_PICKER_H_

#include "WCompositeWidget"
#include "WContainerWidget"
#include "WTime"
#include "WSpinBox"

namespace Wt {

/*! \class WTimePicker Wt/WTimePicker Wt/WTimePicker
 *  \brief A Time Picker
 *
 *  \sa WTimeEdit
 *  \sa WTime
 *  \sa WTimeValidator
 *
 * Styling through CSS is not applicable.
 *
 */
class WT_API WTimePicker : public WCompositeWidget
{
public:
    /*! \brief Creates a new time picker.
     */
    WTimePicker(WContainerWidget *parent = 0);
    
	/*! \brief Creates a new time picker.
     */
    WTimePicker(const WTime &time, WContainerWidget *parent = 0);

    WTime time();

	/*! \brief sets the time
	 */
    void setTime(const WTime& time);

	/*! \brief returns the minutes step
	 */
    int minuteStep() const { return minuteStep_; }
	
	/*! \brief sets the minute step
	 */
    void setMinuteStep(int step) { minuteStep_ = step; }
	
	/*! \brief sets the second step
	 */
    void setSecondStep(int step) { secondStep_ = step; }

	/*! \brief Signal emitted when the value is changed
	 */
    Signal<>& selectionChanged() { return selectionChanged_; }

    /*! \brief Sets the format used for parsing or writing the time
     * The default format is <tt>'HH:mm'</tt>
     */
    void setFormat(const WT_USTRING& format);

    /*! \brief Returns the format
     */
    const WT_USTRING& format() const { return format_;}

private:

    void init(const WTime &time = WTime());
    void hoursValueChanged();
    void minutesValueChanged();
    void secondsValueChanged();
    void msecondsValueChanged();
    
    int minuteStep_;
    int secondStep_;


    WT_USTRING format_;

    WText *hourText_;
    WText *minuteText_;
    WText *secondText_;
    WText *millisecondText_;

    WSpinBox *sbhour_;
    WSpinBox *sbminute_;
    WSpinBox *sbsecond_;
    WSpinBox *sbmillisecond_;

    void incrementMinutes();
    void decrementMinutes();
    void incrementHours();
    void decrementHours();
    void incrementSeconds();
    void decrementSeconds();

    Signal<> selectionChanged_;

};


} // end namespace Wt

#endif // WTIME_PICKER_H_
